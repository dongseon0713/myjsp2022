/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-03-03 03:39:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <meta name=\"description\" content=\"\">\r\n");
      out.write("  <meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("  <title>SB Admin 2 - Register</title>\r\n");
      out.write("\r\n");
      out.write("  <!-- Custom fonts for this template-->\r\n");
      out.write("  <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Custom styles for this template-->\r\n");
      out.write("  <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/sb-admin-2.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"bg-gradient-primary\">\r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"card o-hidden border-0 shadow-lg my-5\">\r\n");
      out.write("      <div class=\"card-body p-0\">\r\n");
      out.write("        <!-- Nested Row within Card Body -->\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("              <div class=\"col-lg-3\"></div>\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"col-lg-6\">\r\n");
      out.write("            <div class=\"p-5\">\r\n");
      out.write("              <div class=\"text-center\">\r\n");
      out.write("                <h1 class=\"h4 text-gray-900 mb-4\">회원가입</h1>\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              \r\n");
      out.write("              <!-- 자바스크립트(제이쿼리) 를 사용하기전에 input 태그의 id속성을 확인하세요. -->\r\n");
      out.write("              <form class=\"user\" action=\"joinForm\" method=\"post\" id=\"regForm\">\r\n");
      out.write("                <!-- 아이디 -->\r\n");
      out.write("                <div class=\"form-group row\">\r\n");
      out.write("                  <div class=\"col-sm-8 mb-3 mb-sm-0\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control form-control-user\" placeholder=\"아이디\" name=\"id\" id=\"id\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"col-sm-4\">\r\n");
      out.write("                  	<input type=\"button\" class=\"btn btn-primary btn-user btn-block\" value=\"중복체크\" onclick=\"IdCheck()\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 이름 -->\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control form-control-user\" placeholder=\"이름\" name=\"name\" id=\"name\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 비밀번호 -->\r\n");
      out.write("                <div class=\"form-group row\">\r\n");
      out.write("                  <div class=\"col-sm-12 mb-3 mb-sm-0\">\r\n");
      out.write("                    <input type=\"password\" class=\"form-control form-control-user\" placeholder=\"비밀번호\" name=\"pw\" id=\"pw\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 비밀번호 확인 -->\r\n");
      out.write("                <div class=\"form-group row\">\r\n");
      out.write("                  <div class=\"col-sm-12 mb-3 mb-sm-0\">\r\n");
      out.write("                    <input type=\"password\" class=\"form-control form-control-user\" placeholder=\"비밀번호체크\" id=\"pwCheck\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"button\" class=\"btn btn-primary btn-user btn-user btn-block\" value=\"회원가입\" onclick=\"joinCheck()\">\r\n");
      out.write("               \r\n");
      out.write("              </form>\r\n");
      out.write("                           \r\n");
      out.write("              <hr>\r\n");
      out.write("              <div class=\"text-center\">\r\n");
      out.write("                <a class=\"small\" href=\"/\">메인으로</a><!-- 절대경로 -->\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"text-center\">\r\n");
      out.write("                <a class=\"small\" href=\"login\">로그인</a>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"col-lg-3\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  <!-- Bootstrap core JavaScript-->\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   	<script type=\"text/javascript\">\r\n");
      out.write("   		function IdCheck(){\r\n");
      out.write("   			var id = $('#id').val();	//id태그 value에 접근\r\n");
      out.write("   			var user_id = {\"id\" : id};	//전송할 데이터의 key값\r\n");
      out.write("   			\r\n");
      out.write("   			if(id.length < 4){\r\n");
      out.write("   				alert(\"아이디는 4글자 이상이여야 합니다.\");\r\n");
      out.write("   			}else {\r\n");
      out.write("   				//먼저 ajax를 지원하는 json을 사용하기 위해 라이브러리 필요\r\n");
      out.write("   				//json은 {키 : 값}을 구조를 가지고 있는 데이터 묶음\r\n");
      out.write("   				//ajax문법\r\n");
      out.write("   				$.ajax({\r\n");
      out.write("   					type : \"post\",		//요청 형식\r\n");
      out.write("   					url : \"checkId\",	//요청 주소\r\n");
      out.write("   					data : user_id,		//서버에 전송할 데이터 json형식\r\n");
      out.write("   					//dataType : \"json\",//서버에 요청 후 리턴해 주는 타입\r\n");
      out.write("   					error : function(request, error){\r\n");
      out.write("   						alert(error + \"\\n\" + request.status);\r\n");
      out.write("   					},\r\n");
      out.write("   					success : function(result){ \r\n");
      out.write("   							//ajax통신에 성공했을 때 호출될 자바 스크립트 함수,\r\n");
      out.write("   							//결과 여부가 result매개 변수로 전달됨.\r\n");
      out.write("   							console.log(\"성공 실패 여부 : \" + result);\r\n");
      out.write("   							\r\n");
      out.write("   							if(result == 1) {	//중복되는 아이디가 존재함.\r\n");
      out.write("   								alert(\"이미 존재하는 아이디 입니다.\");\r\n");
      out.write("   							}else{\r\n");
      out.write("   								alert(\"사용가능한 아이디 입니다.\");\r\n");
      out.write("   					   			$(\"#id\").attr(\"readonly\", true);\r\n");
      out.write("   							}\r\n");
      out.write("   					}\r\n");
      out.write("   				}) 	//$.ajax 동작 부분\r\n");
      out.write("   			}	//else 종료 부분\r\n");
      out.write("   		}\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("   		//회원가입 체크\r\n");
      out.write("   		function joinCheck(){\r\n");
      out.write("   			//attr(속성, 변경할 값) 함수는 해당 ID태그의 내부 속성을 변경\r\n");
      out.write("   			//attr(속성) 함수의 매개값이 하나라면 해당 속성여부를 확인\r\n");
      out.write("   			//val() 함수는 해당 ID태그의 값을 확인\r\n");
      out.write("   			//focus() 함수는 해당 ID태그의 마우스 커서를 위치시킨다.\r\n");
      out.write("   			//submit() 함수는 해당 ID태그의 form 을 서밋처리\r\n");
      out.write("   			if($(\"#id\").val().length < 1){\r\n");
      out.write("   				alert(\"아이디를 입력하세요.\");\r\n");
      out.write("   			}else if(!$(\"#id\").attr(\"readonly\")){\r\n");
      out.write("   				alert(\"아이디 중복 체크를 해야합니다.\");\r\n");
      out.write("   			}else if( $(\"#name\").val().length < 1){\r\n");
      out.write("   				alert(\"이름을 입력하세요.\");\r\n");
      out.write("   			}else if( $(\"#pw\").val().length < 1){\r\n");
      out.write("   				alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("   			}else if( $(\"#pw\").val() != $(\"#pwCheck\").val()){\r\n");
      out.write("   				alert(\"비밀번호 확인란을 확인해주세요.\");\r\n");
      out.write("   				$(\"#pwCheck\").focus();\r\n");
      out.write("   			}else if(confirm(\"회원 가입 하시겠습니까?\")){\r\n");
      out.write("   				$(\"#regForm\").submit();\r\n");
      out.write("   			}\r\n");
      out.write("   			\r\n");
      out.write("   		}\r\n");
      out.write("   		\r\n");
      out.write("\r\n");
      out.write("   	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
